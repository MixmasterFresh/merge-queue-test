name: Merge Queue
on:
  pull_request:
    types: [labeled]

concurrency: merge queue
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Should probably do some validation that the PR can be merged(e.g. is approved)
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Cancelling as not applicable
        uses: andymckay/cancel-action@0.2
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'queued') }}
      - name: Cancelling due to previous failure
        uses: andymckay/cancel-action@0.2
        if: ${{ contains(github.event.pull_request.labels.*.name, 'failed') }}
      - name: Cancelling since we already merged
        uses: andymckay/cancel-action@0.2
        if: ${{ contains(github.event.pull_request.labels.*.name, 'merged') }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set committer and author information
        run: |
          export GIT_AUTHOR_NAME=$(git show -s --format='%an')
          export GIT_AUTHOR_EMAIL=$(git show -s --format='%ae')
          export GIT_COMMITTER_NAME=$(git show -s --format='%cn')
          export GIT_COMMITTER_EMAIL=$(git show -s --format='%ce')
          echo "GIT_AUTHOR_NAME=$GIT_AUTHOR_NAME" >> $GITHUB_ENV
          echo "GIT_AUTHOR_EMAIL=$GIT_AUTHOR_EMAIL" >> $GITHUB_ENV
          echo "GIT_COMMITTER_NAME=$GIT_COMMITTER_NAME" >> $GITHUB_ENV
          echo "GIT_COMMITTER_EMAIL=$GIT_COMMITTER_EMAIL" >> $GITHUB_ENV
      - name: Fetch ${{ github.event.pull_request.base.ref }}
        run: 'git fetch origin ${{ github.event.pull_request.base.ref }}:target'
      - name: Reset --soft to common commit
        run: 'git reset $(git merge-base target HEAD)'
      - name: Create single commit
        run: 'git add -A && git commit -m "${{github.event.pull_request.title}}"'
      - name: Rebase onto ${{ github.event.pull_request.base.ref }}
        run: 'git rebase target'

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run our flaky "test"
        run: if (( RANDOM % 2 )); then exit 0; else exit 1; fi
        
      - name: Merge it!
        run: 'git push origin ${{ github.event.pull_request.base.ref }}'
      
